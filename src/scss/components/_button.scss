/**
 * button
 *
 *
 * @author Bj√∂rn Hase
 *
 */

$crispy__button__padding: pxToEm(10px) pxToEm(25px) !default;
$crispy__button__border: 0 !default;

$crispy__button__up-margin: pxToEm(20px) !default;
$crispy__button__up-padding: pxToEm(8px) pxToEm(13px) !default;

@mixin crispy__button() {
    .button {
        position: relative;
        display: inline-block;
        text-decoration: none;

        vertical-align: middle;
        appearance: none;
        padding: $crispy__button__padding;

        border: $crispy__button__border;

        &--wide {
            width: 100%;
        }

        // button for scroll up and down
        &--up, &--down {
            position:fixed;
            bottom: 0;
            margin: $crispy__button__up-margin;
            padding: $crispy__button__up-padding;
        }

        &--down {
            bottom: 0;
        }

        &--up {
            bottom: 0;
        }


        &:hover {
            cursor: pointer;
            text-decoration: none;
        }

        &:focus {
            outline: none;
        }
    }

    /**
     * grouping buttons
     *
     *
     */
    .button-group {
        .button {
            float: left;
        }

        @include crispy__clearfix();
    }
}

/**
 *
 *
 */
@mixin crispy__button__colors($colors) {
    @each $name, $color in $colors {

        // default has no modification
        @if ($name == 'default') {
            @include crispy__button__color($color);
        }
        @else {
            &--#{$name} {
                @include crispy__button__color($color);
            }
        }
    }
}

/**
 *
 *
 */
@mixin crispy__button__color($color) {
    $background-color: false;
    $text-color: false;

    @if (type-of($color) == 'map') {
        @if (has-key($color, 'color')) {
            $text-color: map-get($color, 'color');
        }

        @if (has-key($color, 'background-color')) {
            $background-color: map-get($color, 'background-color');
        }

        color: $text-color;
        background-color: $background-color;

        &:hover {
            color: $text-color;
            background-color: darken($background-color, 10%);
        }
    }
}
